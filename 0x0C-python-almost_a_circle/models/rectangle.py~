#!/usr/bin/python3
"""
This is Python3 code
"""


from models.base import Base


class Rectangle(Base):
    """
    Class that defines a rectangle based from the
    Base class
    """
    def __init__(self, width, height, x=0, y=0, id=None):
        """
        Function that initializes class attributes
        """
        super().__init__(id)
        if not isinstance(width, int):
            raise TypeError("width must be an integer")
        if not isinstance(height, int):
            raise TypeError("height must be an integer")
        if width <= 0:
            raise ValueError("width must be > 0")
        if height <= 0:
            raise ValueError("height must be > 0")
        if x <= 0:
            raise ValueError("x must be > 0")
        if y <= 0:
            raise ValueError("y must be > 0")
        self.width = width
        self.height = height
        self.x = x
        self.y = y

    @property
    def width(self):
        """
        Getter function for the width attribute
        """
        return self.__width

    @width.setter
    def width(self, value):
        """
        Setter function for the width attribute
        """
        if not isinstance(value, int):
            raise TypeError("width must be an int")
        if int(value) < 0:
            raise ValueError("width must be > 0")
        self.__width = value

    @property
    def height(self):
        """
        Getter function for the height attribute
        """
        return self.__height

    @property
    def x(self):
        """
        Getter function for the x attribute
        """
        return self.__x

    @property
    def y(self):
        """
        Getter function for the y attribute
        """
        return self.__y

    @height.setter
    def height(self, value):
        """
        Setter function for the height attribute
        """
        if not isinstance(value, int):
            raise TypeError("height must be an integer")
        elif int(value) < 0:
            raise ValueError("x must be >=0")
        self.__height = value

    @x.setter
    def x(self, value):
        """
        Setter function for the x attribute
        """
        if int(value) < 0:
            raise ValueError("x must be >=0")
        self.__x = value

    @y.setter
    def y(self, value):
        """
        Setter function for the y attribute
        """
        if int(value) < 0:
            raise ValueError("y must be >=0")
        self.__y = value

    def area(self):
        """
        Function that calculates the area of the rectangle
        """
        area = self.__width * self.__height
        return area

    def display(self):
        """
        Function that prints ASCII format of the defined rectangle
        """
        for i in range(self.__y):
            print()
        for j in range(self.__height):
            print(" " *self.__x + "#" * self.__width)

    def __str__(self):
        """
        Funtion that returns the string formatting of the
        rectangle
        """
        return "[Rectangle] ({}) {}/{} - {}/{}".format(
                self.id, self.__x, self.__y, self.__width, self.__height)
